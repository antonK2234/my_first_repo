1. Що таке DevOps?
Это методология взаимодействие команды разработки со специалистами информационному тех. обслуживанию для эфективного создания и 
эксплотации продукта.

2.Ви набираєте google.com у браузері. Розкажіть якомога детальніше, що відбувається в цей час?
Первое браузер определяет это поисковый запрос или  url.  После браузер проверит если сайт есть в списке HSTS, то отправляет запрос по протоколу
https если нет то по http. Далее устанавливаеться соединение с веб сервером по  TCP соейденению с определённым портом (http - 80, https-443)
Перед отправкой браузер определяет IP адреесс сервера с помощью DNS (система доменных имен) Сначала браузер проверяет в своем кеше информацию о домене
если нет - проверка в файле host, если нет - в кеше операционной системы. (Если информации нет, то идёт обращение к сетевому серверу провайдера
информации нет - переходит к корневому серверу, информации нет, переходит дальше - обращение к DNS серверу ответсвенному за зону, информации нет, 
переходит дальше - NS сервер) После установки соеденения, отправляеться пакет на сервер (POST, GET, PUT, DELETE, CONNECT) запрос 
HTTP-запрос (HTTPS), чтобы получить контент в котором просит сервер отправить данные для отображения страницы. В этом запросе содержится 
информация о самом браузере, временные файлы, требования к соединению. Сервер получил запрос от браузера с подробным описанием, что
ему требуется. После происходит обработка запроса, этой задачей занимается серверное программное обеспечение (nginx или Apache)
После подготовки ответа веб-сервером, происходитотправка данных браузеру. В ответе содержится контент для отображения веб-страницы, 
информация о типе сжатия данных, способах кэширования, файлы cookie, которые нужно записать . 
Браузер распаковывает полученный ответ и начинает отображать полученный контент на экране, сперва происходит загрузка HTML страницы, после скрипты,
картинки, файлы.... В этот момент браузер и сервер ещё могут обмениваться информацией. После загрузки, нам доступна полная страница. 

3.Як працює HTTPS?
HTTPS - это протокол безопасной передачи данных, поддерживающий технологию TLS/SSL
Работаете он по принципу, браузер (клиент) делает запрос на сервер тем замым первоночально спрашивая работает ли запрашиваемый сайт 
по протоколу HTTPS, в ответ сервер на котором работает сайт отправляет сведенья о сертификате и публичный ключ, браузер сверяет полученную
информацию, генерирует сеансовый ключ зашифровывает публичным ключем и отправляет на сервер. Сервер расшифровует сеансовый ключ, и устанавливает
безопасное соединение.

4.Поясніть концепцію Infrastructure as Code, для чого це потрібно і які проблеми вирішує?
Процесс управления датацентров и серверов с помощью файлов определений, созданный как альтернатива физическому конфигурированию оборудования
и оперируемым человеком инструментам. 
Плюсы можно выделить - скорость и уменьшение затрат - позволяет быстрее конфигурировать инфраструктуру. Масштабируемость и стандартизация:
предоставляет стабильные среды быстро и на нужном уровне. Восстановление в аварийных ситуациях - позволяет быстро вернуть сервис к предыддущим
настройкам в аварийных ситуациях. Безопасность - одинаковы настройки безопасности можно применить на разных машинах. 
Недостатки можно выделить -  разработка и внедрение может потребовать использования дополнительных утилит, а ошибка может привести к тому, что
будет распространна на все машины. Обучаемость и понимние команды Infrastructure as Code.

5.Опишіть загальну архітектуру операційної системи.
Общая архитектура Linux-систем состоит всего их 4 компонентов
Оборудование ("железо") физические устройства, такие как CPU, устройства памяти, жёсткие диски, сетевые карты. 
Ядро Linux - основной компонент Линукс-систем. Который связывает изкоуровневое «железо» и высокоуровневые компоненты операционной системы.
Программное обеспечение ("Утилиты") - службы, которые считаются частью операционной системы, например оконный менеджер, 
командная строка и т.д. Так же, сюда входит программный интерфейс ядра.
Оболочка системы, пользовательский интерфейс, который налаживает согласованность между пользователем и ядром операционной системы.

6.Опишіть основне призначення операційної системи.
Операционная система обеспечивает совместное функционирование всех устройств ПК и предоставляет пользователю удобный доступ к его ресурсам

7.Навіщо потрібні файлові системи? Які існують?
Файловая система - это часть операционной системы, которая предназначена для опредедения способа организации и хранения информации на электронном
или любом другом способе хранения. Существуют такие файловые системы:
FAT32 NTFS 

8.У чому різниця між віртуалізацією і контейнеризацією?
Виртуаализация это создание компьютера в компьютере, с собсвенным ядром, памятью, ОС и процессором работающее на ресурсе хост системы. 
Контейнеры не создают отдельное ядро и не требуют память ОС и собсвенный процессор, место этого они обращаються к ресурсом хост машины. 

9.У чому переваги контейнерів?
Контейнеры стартуют более быстро, потребялют меньше рессурсов, образ конетйнера весит гораздо меньше так как там только нужные программы
для приложения. 

10.Яка файлова структура у Linux (UNIX) систем, що розташовані в / etc, / dev, / proc, / sys, / lib, / var (кілька директорій на вибір)?
В Linux файловая система поделена на блоки, каждый из них содержит типы контента, хранящегося в файловой системе. 
/etc — в этой директории находятся файлы конфигураций программ. Эти файлы позволяют настраивать системы, сервисы, скрипты системных демонов
/dev — в данной директории располагаются файлы устройств. С помощью этих файлов можно взаимодействовать с устройствами
/proc — содержит файлы, хранящие информацию о запущенных процессах и о состоянии ядра ОС
/sys — содержит данные непосредственно о системе. Можно узнать информацию о ядре, драйверах и устройствах
/lib — содержит системные библиотеки, с которыми работают программы и модули ядра
/var — содержит переменные файлы
/tmp - содержет временные файлы в каталоге. 

11.Що таке Load Average?
Средние значени загрузки системы. Можно посмотреть командой uptime. При выводе будет показано три значения згрузка в 1,5 и 15 минутах.

12.У чому різниця між soft та hard symlink?
Первое это то что hardlink - это файл, а softlink - это ссылка на файл. Файл hardlink имеет одинаковый ИД с исходным файлом. При удалении
основного файла hardlink остаёться, а при удаении основного файла softlink  и при повторном открытии softlink скажет что файла не существует.

13.Як працюють file permissions, навіщо директорії права виконання (+x)?
У каждого файла или директории в линукс есть есть права доступа. Права означают право на чтение файла, право на запись в файл или право на
выполнение файла в случае скрипта или программы. Механизм управления состоит из класов владения файла и разрешения. 
Под классами подразумевают пользователей или группу пользователей которому доступен данный файл. 
Так например выделяют три класса - пользователь (владелец файла) группа (Группа может включать несколько пользователей. Каждый пользователь, 
принадлежащий к определенной группе, будет иметь такие же привилегии и права доступа для определенного файла) другие (Это относится ко всем 
другим пользователям,которые могут получить доступ к файлу.)
Для каждого файла есть три типа разрешений, применимых ко всем классам. Это - чтение (R) (Разрешение на чтение позволяет пользователю 
открывать файл и читать его содержимое) Запись (W) (Разрешение на запись позволяет пользователю изменять или изменять содержимое файла)
Выполненение (X) (Это разрешение позволяет пользователю выполнять программу или код)
Права исполнения (+x) необходимы директории для выполнения программы или кода находящемся в данной директории. Права исполнения
предоставляються командой  chmod (+x) "file"

14.Що таке zombie process?
Это процесс который завершил работу, но информация о в таблице процессов присутсвует о них, так как родительский процесс не получил
информации о завершении работы от child process.

15.За допомогою чого можна зібрати інформацію про поточний стан процесора, пам’яті, диска, мережі?
Просмотреть информацию удомбно через утилиту htop. Можно узнать состоянии процессов, згрузки процессра, памяти. 
Команда free -h отобразит информацию об общем состоянии памяти. Также информацию по дискам можно проверить через команду df -h. 

16.Що таке swappiness?
Это параметр который задает процент свободной оперативной памяти, при котором начинается использование подкачки(SWAP). 

17.Як подивитися вільне місце на диску?
С помощью команды df -h. Отобразит информацию скаолько свободно месета и сколько заннято место на диске. 
Также можно использовать команду free -h для того что бы узнать сколько доступно общего объёма памяти. 

18.Що таке inode?
Структура данных, которая хранит метаданные о файлах, за исключением имени файла. 
Храниться информация о длине файла в байтах, id устройства с файлом, id пользователя владельца файла, id группы файла, права доступа, 
время последнего изменения файла, счётчик хардлинков, указатели на блоки файла.

19.Розкажіть поетапно процес завантаження Linux від моменту ввімкнення живлення комп’ютера.
1)После нажатия кнопки POWER центральный процессор переходит на адресс BIOS и загружает BIOS(или UEFI на современных ПК).
BIOS  проводит проверку аппаратного обеспечения и выбирает согласно настроек носитель информации с которого будет загружена операционная
система. 
2)После происходит загрузка MBR (Master Boot Record) в которм содержиться раздел диска, с которого необходимо выполнять дальнейший код
загрузки операционной системы. Как только MBR обнаруживает загрузчик второго этапа, то передает управление на него.
3)Задача загрузчика второго этапа, найти ядро системы и загрузить его в память. 
Как только загрузчик находит ядро, то загружает его в оперативную память и передает ему дальнейшее управление.
4)Ядро находиться в жатом виде, первое действие которое производит - это свою «самораспаковку». Затем выполнит монтирование образа 
корневой файловой системы, указанной в файле grub.cfg, и запустит процесс инициализации системы.
5)После загрузки ядра, запускаеться процесс иницализации системы (init), который приводит к запуску всех необходимых служб и программ. 
Данные службы продолжат работать после инициализации и управляют основными системными процессами, такими как: 
регистрация различных системных сообщений, отслеживание устройств и обеспечение синхронизации файловой системы с системной памятью.
6)После запуска запускаеться остальные процесы которые необходимы для работы

20.Що станеться під час виконання команд:
1) cat file1 > file2 - данной командой мы заменяем текст с file1 в file2 перезаписываем file2. 
2) cat file1 >> file2 - данной командой мы добавляем текст с file1 в file2 и в file2 будет отображаться информация и file1 и file2, 
а перезаписываем file2 
 
28.Що таке модель OSI, TCP/IP?
OSI - сетевая модель, стека сетевых протоколов. Также можно сказать что это стандарт которой был создан для передачи данных по сети.
Состоит модель из семи уровней - физический (на этом уровне мы работаем с кабелями, контактами в разъемах,Wi-Fi), канальный (на этом уровне
данные передаютсяна устройства как коммутаторы и мосты.), сетевой (на этом уровне происходит маршрутизация трафика), транспортный (обеспечивает
передачу данных по сети), сеансовый (управляет сессиями, соединяет или разврывает сеансы работы), представления (преобразование форматов \
сообщений), приложения (предоставляет доступ к сетевым службам). 
TCP/IP - сетевая модель, описывающая способ передачи данных в цифровом виде. В данной модели выделяют 4 уровня - канальный (Аппаратный уровень
обеспечивает взаимодействие сетевого оборудования), межсетвой (работа маршрутизаторов), транспортный (отвечает за передачу данных и определяет
для кого именно прилодение доставляет данные), прикладной (предоставляет доступ к сетевым службам).
 
29.Для чого потрібні network masks?
Маска подсети - это 32-битное число, которая используется для определения к какой подсети принадлежит определенный IP адрес.

37.У чому різниця між IaaS, PaaS та SaaS?
Основная разница, что это разный вид предоставляемых услуг.
IaaS (инфраструктура как услуга) — аренда вычислительных ресурсов, на которые клиент может устанавливать любое программное обеспечение и 
приложения. Администрирования серверного и сетевого оборудования решает поставщик услуги, но настройки на  уровне операционных систем
и приложений в них осуществляет сам клиент.
PaaS (платформа как услуга) — в зону ответственности поставщика входит вся физическая инфраструктура, а также администрирование на уровне
операционных систем. Клиент управляет приложениями, развернутыми на базе данной инфраструктуры.
SaaS (программное обеспечение как услуга) — клиент не имеет доступа ни к настройкам на уровне инфраструктуры, ни к конфигурации программной
платформы. Он лишь использует готовый прикладной сервис.

43.У чому різниця між аутентифікацією та авторизацією?
Аутефикация - это процедура проверрки пользователя, например проверка подлинности пользователя путем сравнения введенного им пароля или Email
Авторизация — предоставление определенному лицу или группе лиц прав на выполнение определенных действий.
Разница состоит в том, что с помощью аутифекации мы говорим кто "входит" в систему, а авторизацией есть ли у данного вошедшего доступ на действие. 
К примеру программный комплекс, сотрудник может пройти аутефикацию и войти в систему, но так  у этого сотрудника нет прав на работу в данном приложении
работать он не сможет (авторизация).